version: "3.7"

services:
  users:
    build:
      context: ./users
      dockerfile: Dockerfile
    image: task-management-users
    container_name: task-management-users-node
    command: /usr/src/app/node_modules/.bin/nodemon index.js
    volumes:
      - ./users/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8083:8083"
    env_file: ./users/.env
    environment:
      - NODE_ENV=development
      # - MONGO_CONNECTION_STRING = mongodb+srv://${MONGO_USER}:${MONGO_PSW}@${MONGO_SERVER}/${MONGO_DB}?retryWrites=true&w=majority
      # - ACCESS_TOKEN_SECRET = ...
      # - REFRESH_TOKEN_SECRET = ...
    networks:
      - app-network

  task-management:
    build:
      context: ./task-management
      dockerfile: Dockerfile
    image: task-management-ressources
    container_name: task-management-ressources-node
    command: /usr/src/app/node_modules/.bin/nodemon index.js
    volumes:
      - ./task-management/:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "8084:8084"
    env_file: ./task-management/.env
    environment:
      - NODE_ENV=development
      # - MONGO_CONNECTION_STRING = mongodb+srv://${MONGO_USER}:${MONGO_PSW}@${MONGO_SERVER}/${MONGO_DB}?retryWrites=true&w=majority
      # - ACCESS_TOKEN_SECRET = ...
      # - REFRESH_TOKEN_SECRET = ...
    networks:
      - app-network

  front:
    build:
      context: ./front
      dockerfile: Dockerfile
    image: task-management-front
    container_name: task-management-react-front
    command: npm start
    volumes:
      - ./front/:/usr/app
      - /usr/app/node_modules
    depends_on:
      - users:
        condition: service_started
      - task-management:
        condition: service_started
    ports:
      - "3000:3000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  data-volume:
    node_modules:
      web-root:
      driver: local
